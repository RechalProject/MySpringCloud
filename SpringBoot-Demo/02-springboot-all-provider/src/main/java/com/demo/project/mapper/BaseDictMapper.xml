<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.project.mapper.BaseDictMapper">
  <resultMap id="BaseResultMap" type="com.demo.project.model.BaseDict">
    <id column="dict_id" jdbcType="INTEGER" property="dictId" />
    <result column="dict_type_code" jdbcType="VARCHAR" property="dictTypeCode" />
    <result column="dict_type_name" jdbcType="VARCHAR" property="dictTypeName" />
    <result column="dict_item_name" jdbcType="VARCHAR" property="dictItemName" />
    <result column="dict_sort" jdbcType="INTEGER" property="dictSort" />
    <result column="dict_enable" jdbcType="CHAR" property="dictEnable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dict_id, dict_type_code, dict_type_name, dict_item_name, dict_sort, dict_enable
  </sql>
  <select id="selectByExample" parameterType="com.demo.project.model.BaseDictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from base_dict
    where dict_id = #{dictId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_dict
    where dict_id = #{dictId,jdbcType=INTEGER}
  </delete>
  <select id="selectBaseDictByTotal"  resultType="java.lang.Integer">
    select
    count(*)
    from base_dict
  </select>
  <delete id="deleteByExample" parameterType="com.demo.project.model.BaseDictExample">
    delete from base_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.project.model.BaseDict">
    insert into base_dict (dict_id, dict_type_code, dict_type_name,
      dict_item_name, dict_sort, dict_enable
      )
    values (#{dictId,jdbcType=INTEGER}, #{dictTypeCode,jdbcType=VARCHAR}, #{dictTypeName,jdbcType=VARCHAR},
      #{dictItemName,jdbcType=VARCHAR}, #{dictSort,jdbcType=INTEGER}, #{dictEnable,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.project.model.BaseDict" useGeneratedKeys="true" keyProperty="dict_id">
    insert into base_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        dict_id,
      </if>
      <if test="dictTypeCode != null">
        dict_type_code,
      </if>
      <if test="dictTypeName != null">
        dict_type_name,
      </if>
      <if test="dictItemName != null">
        dict_item_name,
      </if>
      <if test="dictSort != null">
        dict_sort,
      </if>
      <if test="dictEnable != null">
        dict_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        #{dictId,jdbcType=INTEGER},
      </if>
      <if test="dictTypeCode != null">
        #{dictTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="dictTypeName != null">
        #{dictTypeName,jdbcType=VARCHAR},
      </if>
      <if test="dictItemName != null">
        #{dictItemName,jdbcType=VARCHAR},
      </if>
      <if test="dictSort != null">
        #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictEnable != null">
        #{dictEnable,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.project.model.BaseDictExample" resultType="java.lang.Long">
    select count(*) from base_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update base_dict
    <set>
      <if test="record.dictId != null">
        dict_id = #{record.dictId,jdbcType=INTEGER},
      </if>
      <if test="record.dictTypeCode != null">
        dict_type_code = #{record.dictTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dictTypeName != null">
        dict_type_name = #{record.dictTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictItemName != null">
        dict_item_name = #{record.dictItemName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictSort != null">
        dict_sort = #{record.dictSort,jdbcType=INTEGER},
      </if>
      <if test="record.dictEnable != null">
        dict_enable = #{record.dictEnable,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update base_dict
    set dict_id = #{record.dictId,jdbcType=INTEGER},
      dict_type_code = #{record.dictTypeCode,jdbcType=VARCHAR},
      dict_type_name = #{record.dictTypeName,jdbcType=VARCHAR},
      dict_item_name = #{record.dictItemName,jdbcType=VARCHAR},
      dict_sort = #{record.dictSort,jdbcType=INTEGER},
      dict_enable = #{record.dictEnable,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.project.model.BaseDict">
    update base_dict
    <set>
      <if test="dictTypeCode != null">
        dict_type_code = #{dictTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="dictTypeName != null">
        dict_type_name = #{dictTypeName,jdbcType=VARCHAR},
      </if>
      <if test="dictItemName != null">
        dict_item_name = #{dictItemName,jdbcType=VARCHAR},
      </if>
      <if test="dictSort != null">
        dict_sort = #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictEnable != null">
        dict_enable = #{dictEnable,jdbcType=CHAR},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.project.model.BaseDict">
    update base_dict
    set dict_type_code = #{dictTypeCode,jdbcType=VARCHAR},
      dict_type_name = #{dictTypeName,jdbcType=VARCHAR},
      dict_item_name = #{dictItemName,jdbcType=VARCHAR},
      dict_sort = #{dictSort,jdbcType=INTEGER},
      dict_enable = #{dictEnable,jdbcType=CHAR}
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
</mapper>